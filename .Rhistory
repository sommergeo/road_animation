coord_sf(default_crs = sf::st_crs(32632))
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(default_crs = sf::st_crs(32632))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(default_crs = sf::st_crs(32632))+
theme_void()
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf("+proj=moll")+
theme_void()
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=moll")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=equal_earth")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=equalearth")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=mollweide")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf("+proj=moll")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=eqearth")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=moll")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-20,180), ylim = c(-50, 90))+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
#coord_map(projection="mollweide", orientation=c(90,50,0), xlim=c(-20,180), ylim = c(-50, 90))+
#theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape)+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim = c(-20, 180), ylim = c(-50, 90))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim = c(-180, 180), ylim = c(-50, 90))+
theme_void()
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim = c(-180, 180), ylim = c(-90, 90))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim = c(-180, 180))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", ylim = c(-90, 90))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", ylim = c(-50, 90) )+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", ylim = c(-500, 900) )+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", ylim = c(-500000, 900000) )+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim = c(−428550, 900000) )+
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=60")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=70")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte"))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
View(world_shape)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
## Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=locality.x, y=locality.y, group=locality.idlocality, col=locality.idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
#Export
animate(map, fps=24, duration=20, start_pause = 48, end_pause = 0, bg='white', width=20, height=15, units='cm', res=300)
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
anim_save(filename="output/road_animation2.gif", animation = last_animation())
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-156200000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-1562000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-15620000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-1000000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-10000000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-5000000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,0))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,6000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,10000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,10000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,15000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,11000000))+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
theme_void()
plot(world)
plot(world)
## Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=locality.x, y=locality.y, group=locality.idlocality, col=locality.idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
anim_save(filename="output/road_animation2.gif", animation = last_animation())
View(d)
library(assertthat)
library(RPostgres)
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host = "134.2.216.14", port = 5432, user = user_name, password = user_password) # Connect to ROAD
con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
# Option 1: Connect directly to ROAD
road_connection <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432, user=rstudioapi::askForPassword("Database username"), password=rstudioapi::askForPassword("Database password"))
rm(con)
query <- 'SELECT DISTINCT on (assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments) assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments FROM assemblage, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and (assemblage.category ilike '%raw material%' or assemblage.category ilike '%technology%' or assemblage.category ilike '%typology%')) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage) ORDER BY locality.idlocality'
query <- "SELECT DISTINCT on (assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments) assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments FROM assemblage, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and (assemblage.category ilike '%raw material%' or assemblage.category ilike '%technology%' or assemblage.category ilike '%typology%')) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage) ORDER BY locality.idlocality"
d <- dbGetQuery(road_connection, query)
View(d)
query <- "SELECT DISTINCT on (assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments) assemblage.name, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max, age_comments FROM assemblage, locality,all_age(20000,3000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and (assemblage.category ilike '%raw material%' or assemblage.category ilike '%technology%' or assemblage.category ilike '%typology%')) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage) ORDER BY locality.idlocality"
d <- dbGetQuery(road_connection, query)
View(d)
d <- dbGetQuery(road_connection, query)
# Option 2: Load a csv downloaded from the ROAD Website
d <- readr::read_delim("input/input_file.csv", ";", escape_double = FALSE, trim_ws = TRUE) %>%
# Preprocess
d <- d %>%
drop_na(c(query_age_min,query_age_max)) %>%   # Remove all assemblages with missing ages
mutate(steps=as.integer(cut(query_age_min, # cut in 10ka-slices
breaks= seq(20000,3000000,10000), label=FALSE)*10)) %>%
mutate(steps_exp=log(steps))
d <- dbGetQuery(road_connection, query)
# Preprocess
d <- d %>%
drop_na(c(query_age_min,query_age_max)) %>%   # Remove all assemblages with missing ages
mutate(steps=as.integer(cut(query_age_min, # cut in 10ka-slices
breaks= seq(20000,3000000,10000), label=FALSE)*10)) %>%
mutate(steps_exp=log(steps))
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
theme_void()
plot(world)
View(d)
# Preprocess
d <- d %>%
drop_na(c(query_age_min,query_age_max)) %>%                                          # Remove all assemblages with missing ages
mutate(steps=as.integer(cut(query_age_min,                                           # convert to 10ka-slices
breaks= seq(20000,3000000,10000), label=FALSE)*10)) %>%
mutate(steps_exp=log(steps))
## World map from natural earth (rendering 10x faster)
world_shape <- rnaturalearth::ne_countries(scale = 110, type = 'countries', continent = c('europe', 'africa', 'asia', 'oceania'), returnclass = 'sf') %>%
filter(!name %in% c("French Guiana", "Guadeloupe", "Martinique", "Réunion", "Mayotte", 'New Caledonia'))
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
theme_void()
plot(world)
# Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=locality.x, y=locality.y, group=locality.idlocality, col=locality.idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
# Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=locality.x, y=locality.y, group=locality.idlocality, col=locality.idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
# Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=x, y=y, group=locality.idlocality, col=locality.idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
# Rendering with exponential speed
map <- world +
geom_point(data=d, aes(x=x, y=y, group=idlocality, col=idlocality),
size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
# Export
animate(map, fps=24, duration=20, start_pause = 48, end_pause = 0, bg='white', width=20, height=15, units='cm', res=300)
anim_save(filename="output/road_animation.gif", animation = last_animation())
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
#coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
coord_map(projection = "robinson")+
theme_void()
plot(world)
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
theme_void()
plot(world)
d <- dbGetQuery(road_connection, query)
# Preprocess
d <- d %>%
drop_na(c(query_age_min,query_age_max)) %>%                                          # Remove all assemblages with missing ages
mutate(steps=as.integer(cut(query_age_min,                                           # convert to 10ka-slices
breaks= seq(20000,3000000,10000), label=FALSE)*10)) %>%
mutate(steps_exp=log(steps)) %>%
st_as_sf(coords = c("x", "y"), crs = 4326)
library(sf)
# Preprocess
d <- d %>%
drop_na(c(query_age_min,query_age_max)) %>%                                          # Remove all assemblages with missing ages
mutate(steps=as.integer(cut(query_age_min,                                           # convert to 10ka-slices
breaks= seq(20000,3000000,10000), label=FALSE)*10)) %>%
mutate(steps_exp=log(steps)) %>%
st_as_sf(coords = c("x", "y"), crs = 4326)
d <- st_transform(d, crs = "+proj=robin +lon_0=50")
# Rendering with exponential speed
map <- world +
geom_sf(data = d, aes(col = idlocality), size = 2, colour = '#A51E37', alpha = 1) +
#geom_point(data=d, aes(x=x, y=y, group=idlocality, col=idlocality),
#           size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
anim_save(filename="output/road_animation.gif", animation = last_animation())
world <- ggplot() +
geom_sf(data=world_shape, colour='#B9BCB8', fill='#B9BCB8')+
theme_void()
plot(world)
# Rendering with exponential speed
map <- world +
geom_sf(data = d, aes(col = idlocality), size = 2, colour = '#A51E37', alpha = 1) +
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
#geom_point(data=d, aes(x=x, y=y, group=idlocality, col=idlocality),
#           size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0)
anim_save(filename="output/road_animation.gif", animation = last_animation())
# Export
animate(map, fps=24, duration=20, start_pause = 48, end_pause = 0, bg='white', width=20, height=15, units='cm', res=300)
anim_save(filename="output/road_animation.gif", animation = last_animation())
# Rendering with exponential speed
map <- world +
geom_sf(data = d, aes(col=idlocality, group=idlocality), size = 2, colour = '#A51E37', alpha = 1) +
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
#geom_point(data=d, aes(x=x, y=y, group=idlocality, col=idlocality),
#           size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0) # short test render
# Rendering with exponential speed
map <- world +
geom_sf(data = d, aes(col=idlocality, group=idlocality), size = 2, colour = '#A51E37', alpha = 1) +
coord_sf(crs="+proj=robin +lon_0=50", xlim=c(-6000000,12000000))+
#geom_point(data=d, aes(x=x, y=y, group=idlocality, col=idlocality),
#           size=2, colour = '#A51E37', alpha = 1)+
transition_time(time=-d$steps_exp) +
shadow_mark(past=TRUE, size=2, colour='#32414B', alpha=.1) +
enter_fade() +
exit_fade() +
labs(title = '{format(round(exp(-frame_time))*1000, big.mark = ",", scientific=F)} years ago ') +
theme(plot.title = element_text(size=18, colour='#32414B'))
animate(map, fps=5, duration=5, start_pause = 0, end_pause = 0) # short test render
# Export
animate(map, fps=24, duration=20, start_pause = 48, end_pause = 0, bg='white', width=20, height=15, units='cm', res=300)  #render
anim_save(filename="output/road_animation.gif", animation = last_animation())
